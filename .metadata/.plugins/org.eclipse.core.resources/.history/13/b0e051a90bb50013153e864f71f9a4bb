package servers;

import system.*;

public class UDPGameServers {
	
	private static UDPThread UDPThread_AS;
	private static UDPThread UDPThread_EU;
	private static UDPThread UDPThread_NA;
	
	public static void main(String[] args) 
	{
		runUDP();
	}
	
	public static void setUDPServerPlayerNumbers(String pServerName, int pOnline, int pOffline)
	{
		System.out.println(pServerName + " " + pOnline + " " + pOffline);
		if(pServerName.equals(Parameters.serverName_NA))
			UDPThread_NA.setNumberOfPlayers(pOnline, pOffline);
		else if(pServerName.equals(Parameters.serverName_EU))
			UDPThread_EU.setNumberOfPlayers(pOnline, pOffline);
		else if(pServerName.equals(Parameters.serverName_AS))
			UDPThread_AS.setNumberOfPlayers(pOnline, pOffline);
	}
	
	/** Create the UDP and checks if the UDP thread crashes so it would replace it with a new UDP thread */
	private static void runUDP()
	{
		UDPThread_AS = new UDPThread(Parameters.serverName_AS, Parameters.UDPportAS);
		UDPThread_AS.start();
		
		UDPThread_EU = new UDPThread(Parameters.serverName_EU, Parameters.UDPportEU);
		UDPThread_EU.start();
				UDPThread_NA = new UDPThread(Parameters.serverName_NA, Parameters.UDPportNA);
		UDPThread_NA.start();
		
		while(true)
		{
			if(UDPThread_AS.crashed())
			{
				UDPThread_AS = new UDPThread(Parameters.serverName_AS, Parameters.UDPportAS);
				UDPThread_AS.start();
			}
			if(UDPThread_EU.crashed())
			{
				UDPThread_EU = new UDPThread(Parameters.serverName_EU, Parameters.UDPportEU);
				UDPThread_EU.start();
			}
			if(UDPThread_NA.crashed())
			{
				UDPThread_NA = new UDPThread(Parameters.serverName_NA, Parameters.UDPportNA);
				UDPThread_NA.start();
			}
		}
	}

}
